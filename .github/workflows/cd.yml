name: Deploy

on:
  push:
    branches:
      - feeture/gha-deploys

jobs:
  cd:
    runs-on: ubuntu-latest

    env:
      APP_NAME: squareone
      BUILD_FOLDER: ./build
      DEPLOY_FOLDER: ./deploy
      ENVIRONMENT: dev

    steps:
      - name: BUILD SCM
        uses: actions/checkout@v2
        with:
          path: ${{ env.BUILD_FOLDER }}

      - name: Create .env
        working-directory: ${{ env.BUILD_FOLDER }}
        run: |
          printf '
          WP_PLUGIN_ACF_KEY='${{ secrets.WP_PLUGIN_ACF_KEY }}'
          WP_PLUGIN_GF_KEY='${{ secrets.WP_PLUGIN_GF_KEY }}'
          WP_PLUGIN_GF_TOKEN='${{ secrets.WP_PLUGIN_GF_TOKEN }}'
          ' > .env

      - name: Create local config
        working-directory: ${{ env.BUILD_FOLDER }}
        run: |
          php -r "file_exists( 'local-config.php' ) || copy( 'local-config-sample.php', 'local-config.php' );"
          php -r "file_exists( 'local-config.json' ) || copy( 'local-config-sample.json', 'local-config.json' );"
          echo "define( 'ENVIRONMENT', ${{env.ENVIROMENT}} );" >> local-config.php

      - name: Create composer config files
        working-directory: ${{ env.BUILD_FOLDER }}
        run: |
          mkdir -p dev/docker/composer
          printf '{ "config": {}, "repositories": { "packagist": { "type": "composer", "url": "https://packagist.org" } } }' > dev/docker/composer/config.json
          printf '{ "github-oauth": { "github.com": "%s" } }\n' ${{ secrets.GH_TOKEN }} > dev/docker/composer/auth.json

      - name: Install composer dependencies
        working-directory: ${{ env.BUILD_FOLDER }}
        run: composer install --optimize-autoloader

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.13.1'

      - name: Get yarn cache directory
        working-directory: ${{ env.BUILD_FOLDER }}
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Install node modules
        working-directory: ${{ env.BUILD_FOLDER }}
        run: yarn --frozen-lockfile

      - name: Decrypt Host Enviroment Vars
        working-directory: ${{ env.BUILD_FOLDER }}
        run: |
          echo "decrypt host info"

      - name: Host SCM
        working-directory: ${{ env.DEPLOY_FOLDER }}
        run: |
          echo "Checkout host SCM"
          echo "Load host enviroment config"
          echo ""

      - name: Sync Build files to Deploy directory
        run: |
          echo "rsync build to deploy"

      - name: Git Push to Host SCM
        working-directory: ${{ env.DEPLOY_FOLDER }}
        run: |
          echo 'Git push to host SCM'
          echo 'Deploying ${env.GITHUB_REF} to ${env.ENVIRONMENT}'


